import React, { useState } from 'react';
import Toast from './Toast';

const ShareButtons = ({ response }) => {
  const [showToast, setShowToast] = useState(false);
  const shareText = `"${response}" - Generated by Demotivation Station`;
  const shareUrl = window.location.href;

  const shareOptions = [
    {
      name: 'Twitter',
      icon: '🐦',
      url: `https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}&url=${encodeURIComponent(shareUrl)}`,
      color: 'hover:bg-blue-100 hover:text-blue-600'
    },
    {
      name: 'Facebook',
      icon: '📘',
      url: `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}&quote=${encodeURIComponent(shareText)}`,
      color: 'hover:bg-blue-100 hover:text-blue-800'
    },
    {
      name: 'LinkedIn',
      icon: '💼',
      url: `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(shareUrl)}&summary=${encodeURIComponent(shareText)}`,
      color: 'hover:bg-blue-100 hover:text-blue-700'
    },
    {
      name: 'Reddit',
      icon: '🤖',
      url: `https://reddit.com/submit?url=${encodeURIComponent(shareUrl)}&title=${encodeURIComponent(shareText)}`,
      color: 'hover:bg-orange-100 hover:text-orange-600'
    }
  ];

  const copyToClipboard = async () => {
    try {
      await navigator.clipboard.writeText(shareText);
      setShowToast(true);
    } catch (err) {
      console.error('Failed to copy: ', err);
      // Fallback for older browsers
      const textArea = document.createElement('textarea');
      textArea.value = shareText;
      document.body.appendChild(textArea);
      textArea.select();
      try {
        document.execCommand('copy');
        setShowToast(true);
      } catch (fallbackErr) {
        console.error('Fallback copy failed: ', fallbackErr);
      }
      document.body.removeChild(textArea);
    }
  };

  return (
    <div className="space-y-4">
      <Toast 
        message="Copied to clipboard!" 
        show={showToast} 
        onClose={() => setShowToast(false)} 
      />
      
      <h3 className="text-center text-lg font-medium text-gray-700">
        Share the Demotivation:
      </h3>
      
      <div className="flex flex-wrap justify-center gap-3">
        {shareOptions.map((option) => (
          <a
            key={option.name}
            href={option.url}
            target="_blank"
            rel="noopener noreferrer"
            className={`
              flex items-center space-x-2 px-4 py-2 rounded-lg
              bg-white bg-opacity-20 backdrop-blur-sm border border-purple-300
              transition-all duration-200 ${option.color}
              hover:transform hover:scale-105 hover:shadow-md
            `}
          >
            <span className="text-lg">{option.icon}</span>
            <span className="text-sm font-medium">{option.name}</span>
          </a>
        ))}
        
        <button
          onClick={copyToClipboard}
          className="
            flex items-center space-x-2 px-4 py-2 rounded-lg
            bg-white bg-opacity-20 backdrop-blur-sm border border-purple-300
            transition-all duration-200 hover:bg-gray-100 hover:text-gray-700
            hover:transform hover:scale-105 hover:shadow-md
          "
        >
          <span className="text-lg">📋</span>
          <span className="text-sm font-medium">Copy</span>
        </button>
      </div>
    </div>
  );
};

export default ShareButtons;
